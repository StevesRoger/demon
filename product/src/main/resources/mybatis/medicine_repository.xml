<!DOCTYPE mapper PUBLIC "-//mapper.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jarvis.ws.medicine.repository.MedicineRepository">

    <insert id="addMedicine" parameterType="MedicineCreate" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO ph_product ("name", brand, country, composition,created_by, label, "desc", unit_price, status, name_kh, unit_type)
        VALUES (#{name}, #{brandName}, #{country}, #{composition}, #{username}, #{label}, #{desc}, #{unitPrice}, 'active', #{nameKh}, #{unitType})
    </insert>

    <select id="getMedicineByIdAndStatus" resultMap="org.jarvis.ws.medicine.ResultMapper.MedicineEntityResult">
        SELECT med.id AS product_id,brand,unit_price,
        label,country,composition,"name",name_kh,"desc",med.created_date,
        med.modified_date,med.created_by,med.modified_by,
        remaining_alert,deleted_date,status,medicineStock.id AS stock_id,
        medicineStock.created_date AS cre_date,medicineStock.modified_date AS mod_date,
        medicineStock.modified_by AS mod_by,medicineStock.created_by as cre_by,
        post_quantity,pre_quantity,remaining_alert,unit_type
        FROM ph_product AS med
        INNER JOIN ph_stock AS medicineStock
        ON med.id = medicineStock.product_id
        INNER JOIN ph_user_product AS "userAccount"
        ON med.id = "userAccount".product_id
        WHERE status = #{status} AND med.id = #{id}
        <if test="userId != null and userId > 0">
            AND user_id = #{userId}
        </if>
    </select>

    <select id="listMedicine" resultMap="org.jarvis.ws.medicine.ResultMapper.MedicineEntityResult" parameterType="Map">
        SELECT med.id AS product_id,brand,unit_price,
        label,country,composition,"name",name_kh,"desc",med.created_date,
        med.modified_date,med.created_by,med.modified_by,deleted_date,status,
        medicineStock.id AS stock_id,medicineStock.created_date AS cre_date,
        medicineStock.modified_date AS mod_date,medicineStock.modified_by AS mod_by,
        medicineStock.created_by as cre_by,post_quantity,pre_quantity,remaining_alert,unit_type
        FROM ph_product AS med
        INNER JOIN ph_stock AS medicineStock
        ON med.id = medicineStock.product_id
        INNER JOIN ph_user_product AS "userAccount"
        ON med.id = "userAccount".product_id
        WHERE user_id = #{userId}
        <choose>
            <when test="status != null">
                AND status = #{status}
            </when>
            <otherwise>
                AND status = 'active'
            </otherwise>
        </choose>
        <choose>
            <when test="order != null and by != null">
                ORDER BY #{by}
                <if test="order == 'asc'">
                    ASC
                </if>
                <if test="order == 'desc'">
                    DESC
                </if>
            </when>
            <otherwise>
                ORDER BY med.id DESC
            </otherwise>
        </choose>
        <if test="limit != null">
            LIMIT #{limit}
        </if>
        <if test="offset != null">
            OFFSET #{offset}
        </if>
    </select>

    <select id="listMedicineAlert" parameterType="int"
            resultMap="org.jarvis.ws.medicine.ResultMapper.MedicineAlertEntityResult">
        SELECT product.id, "name", name_kh, post_quantity, pre_quantity, remaining_alert, user_id
        FROM ph_product product
        INNER JOIN ph_user_product "userAccount"
        ON product.id = "userAccount".product_id
        INNER JOIN ph_stock stock
        ON product.id = stock.product_id
        WHERE stock.remaining_alert > 0
        AND stock.post_quantity <![CDATA[ <= ]]> stock.remaining_alert
        AND product.status = 'active'
        <if test="userId > 0">
            AND "userAccount".user_id = #{userId}
        </if>
    </select>

    <select id="countMedicine" resultType="int" parameterType="int">
        SELECT COUNT(id) FROM ph_product AS med
        INNER JOIN ph_user_product AS detail
        ON med.id = detail.product_id
        WHERE user_id = #{userId} AND med.status = 'active'
    </select>

    <select id="listSupplying" resultMap="org.jarvis.ws.medicine.ResultMapper.SupplyingEntityResult"
            parameterType="Map">
        SELECT * FROM ph_supplying supp WHERE supp.product_id = #{medicineId}
        <if test="startDate != null and endDate != null">
            AND date_trunc('day',created_date) BETWEEN #{startDate} AND #{endDate}
        </if>
        ORDER BY id DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
        <if test="offset != null">
            OFFSET #{offset}
        </if>
    </select>

    <select id="countSupplying" resultType="int" parameterType="int">
        SELECT COUNT(id) FROM ph_supplying
        WHERE product_id = #{medicineId}
    </select>

    <select id="listMedicineIdByUser" parameterType="Map" resultType="Map">
        SELECT * FROM ph_user_product WHERE user_id = #{userId}
        AND product_id IN
        <foreach item="id" index="index" collection="medicineId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <insert id="sharedMedicine" useGeneratedKeys="true">
        INSERT INTO ph_user_product_shared (product_id, owner_user_id, guest_user_id, scope)
        VALUES(#{medicineEntity.id}, #{ownerUserId}, #{guestUserId}, #{scope})
    </insert>

    <select id="getSharedMedicine" resultMap="org.jarvis.ws.medicine.ResultMapper.SharedMedicineEntityResult">
        SELECT med.id AS product_id,brand,unit_price,
        label,country,composition,"name",name_kh,"desc",med.created_date,
        med.modified_date,med.created_by,med.modified_by,
        remaining_alert,deleted_date,status,medicineStock.id AS stock_id,
        medicineStock.created_date AS cre_date,medicineStock.modified_date AS mod_date,
        medicineStock.modified_by AS mod_by,medicineStock.created_by as cre_by,
        post_quantity,pre_quantity,remaining_alert,unit_type,guest_user_id,owner_user_id,scope
        FROM ph_user_product_shared
        INNER JOIN ph_product AS med ON med.id = ph_user_product_shared.product_id
        INNER JOIN ph_stock AS medicineStock ON med.id = medicineStock.product_id
        WHERE guest_user_id = #{guestUserId}
        AND owner_user_id = #{ownerUserId}
    </select>

    <select id="filterMedicine" resultMap="org.jarvis.ws.medicine.ResultMapper.MedicineEntityResult"
            parameterType="Map">
        SELECT med.id AS product_id,brand,unit_price,
        label,country,composition,"name",name_kh,"desc",med.created_date,
        med.modified_date,med.created_by,med.modified_by,deleted_date,status,
        medicineStock.id AS stock_id,medicineStock.created_date AS cre_date,
        medicineStock.modified_date AS mod_date,medicineStock.modified_by AS mod_by,
        medicineStock.created_by as cre_by,post_quantity,pre_quantity,remaining_alert,unit_type
        FROM ph_product AS med
        INNER JOIN ph_stock AS medicineStock
        ON med.id = medicineStock.product_id
        INNER JOIN ph_user_product AS "userAccount"
        ON med.id = "userAccount".product_id
        WHERE user_id = #{userId}
        AND status = 'active'
        <if test="qty != null">
            <choose>
                <when test="qty.min != null and qty.max != null">
                    AND post_quantity BETWEEN #{qty.min} AND #{qty.max}
                </when>
                <otherwise>
                    <if test="qty.min != null">
                        AND post_quantity <![CDATA[ >= ]]> #{qty.min}
                    </if>
                    <if test="qty.max != null">
                        AND post_quantity <![CDATA[ <= ]]> #{qty.max}
                    </if>
                </otherwise>
            </choose>
        </if>
        <if test="price != null">
            <choose>
                <when test="price.min != null and price.max != null">
                    AND unit_price BETWEEN #{price.min} AND #{price.max}
                </when>
                <otherwise>
                    <if test="price.min != null">
                        AND unit_price <![CDATA[ >= ]]> #{price.min}
                    </if>
                    <if test="price.max != null">
                        AND unit_price <![CDATA[ <= ]]> #{price.max}
                    </if>
                </otherwise>
            </choose>
        </if>
        <choose>
            <when test="order != null and by != null">
                ORDER BY ${by}
                <if test="order == 'asc'">
                    ASC
                </if>
                <if test="order == 'desc'">
                    DESC
                </if>
            </when>
            <otherwise>
                ORDER BY med.id DESC
            </otherwise>
        </choose>
    </select>

    <select id="searchMedicine" resultMap="org.jarvis.ws.medicine.ResultMapper.MedicineEntityResult"
            parameterType="Search">
        SELECT med.id AS product_id,brand,unit_price,
        label,country,composition,"name",name_kh,"desc",med.created_date,
        med.modified_date,med.created_by,med.modified_by,deleted_date,status,
        medicineStock.id AS stock_id,medicineStock.created_date AS cre_date,
        medicineStock.modified_date AS mod_date,medicineStock.modified_by AS mod_by,
        medicineStock.created_by as cre_by,post_quantity,pre_quantity,remaining_alert,unit_type
        FROM ph_product AS med
        INNER JOIN ph_stock AS medicineStock
        ON med.id = medicineStock.product_id
        INNER JOIN ph_user_product AS "userAccount"
        ON med.id = "userAccount".product_id
        WHERE user_id = #{userId}
        <choose>
            <when test="status != null">
                AND status = #{status}
            </when>
            <otherwise>
                AND status = 'active'
            </otherwise>
        </choose>
        <if test="text != null">
            <bind name="pattern" value="'%' + text + '%'"/>
            AND lower(med.name) LIKE #{pattern}
        </if>
        <if test="ids != null and ids.size() > 0">
            AND med.id IN
            <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

</mapper>